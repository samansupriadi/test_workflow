name: Deploy To Production
on:
  pull_request:
    branches:
      - staging
      - development
    types: ["closed"]

  workflow_dispatch:
    inputs:
      DeployTo:
        description: 'Deploy To'
        default: 'ALL'
        type: choice
        options:
        - ALL
        - PGN-MOBILE
        - RELYON

jobs:
  # check_auth: 
  #   needs: set_target_env
  #   if: github.event_name == 'workflow_dispatch'
  #   name: Check user privileges who triger the workflows
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: check user privilege
  #     run: |
  #       auth=${{ contains(secrets.AUTH, github.triggering_actor) }}
  #       if [ "$auth" != "true" ]; then
  #           echo "::error::Users has no privileged to run the workflows"
  #           exit 1
  #       fi

  set_target_env:
    name: Define Environment
    runs-on: ubuntu-latest
    outputs:
      env_app: ${{ steps.set_env.outputs.env_value }}
      target_deploy: ${{ steps.set_env.outputs.targetDeploy }}
    steps:
      - id: set_env
        run: |
          env_value=0
          targetDeploy=${{  inputs.DeployTo != null && inputs.DeployTo || null }}
          type=${{ github.event_name == 'pull_request' && 'pull_request' ||  'workflow_disaptch' }}
          getBranchName=${{ github.event_name == 'pull_request' && github.base_ref || github.event_name == 'workflow_dispatch' &&  github.ref_name}}   
          
          if [[ "$type" == 'workflow_disaptch' ]]; then
            validate=${{ github.ref_name == 'main' || startsWith(github.event.ref, 'refs/tags') && true || false }}
            if [ "$validate" != "true" ]; then
                echo "::error::Worflow only can triger manually from tag and main branch"
                exit 1
            fi
          fi

          if [[ "$getBranchName" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ || "$getBranchName" == 'main' ]] && [[ "$targetDeploy" != NULL ]]; then
            if [[ "$targetDeploy" == 'ALL' ]]; then
              env_value='production'
            else
              env_value="$targetDeploy"
            fi
          elif [[ "$getBranchName" == 'staging' ]]; then
            env_value='staging'
          elif [[ "$getBranchName" == 'development' ]]; then
            env_value='development'
          fi
          
          echo "env_value=$env_value" >> "$GITHUB_OUTPUT"
          echo "targetDeploy=$targetDeploy" >> "$GITHUB_OUTPUT"

  triger-deploy:
    if:  needs.set_target_env.outputs.env_app != '0'
    name: List deploy to ${{ needs.set_target_env.outputs.env_app }}
    needs: set_target_env
    runs-on: ubuntu-latest
    steps:
      - run: |
         echo "${{ needs.set_target_env.outputs.target_deploy }} ${{ needs.set_target_env.outputs.env_app }}"

  # deploy-production:
  #   needs: [set_target_env, check_auth]
  #   if: needs.set_target_env.outputs.env_app != '0' && needs.set_target_env.outputs.env_app == 'production'
  #   name: List deploy to ${{ needs.set_target_env.outputs.env_app }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: |
  #         echo "${{ needs.set_target_env.outputs.target_deploy }} ${{ needs.set_target_env.outputs.env_app }}"
