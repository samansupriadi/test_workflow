name: Test Triger Manually
on:
  pull_request:
    branches:
      - staging
      - development
    types: ["closed"]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Deploy To'
        default: 'ALL'
        type: choice
        options:
        - ALL
        - production-relyon
jobs:
  set_target_env:
    if: github.event.pull_request.merged || github.event_name == 'workflow_dispatch'
    name: Define Environment
    runs-on: ubuntu-latest
    outputs:
      env_app: ${{ steps.set_env.outputs.env_value }}
    steps:
      - id: set_env
        run: |
          echo "${{ github.base_ref }} ${{ github.ref_name }}"
          getBranchName=${{ github.base_ref }}
          env_value=0

          if [[ "$getBranchName" == 'main' ]]; then
              env_value='production'
          elif [[ "$getBranchName" == 'staging' ]]; then
              env_value='staging'
          elif [[ "$getBranchName" == 'development' ]]; then
              env_value='development'
          fi

          echo "env_value=$env_value" >> "$GITHUB_OUTPUT"

  env-list:
    needs: set_target_env
    runs-on: ubuntu-latest
    steps:
      - run: |
          envs=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{secrets.TOKEN}}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ vars.REPO }}/environments | jq -r '.environments[].name | select(test("${{ needs.set_target_env.outputs.env_app }}"))')
          
          echo "$envs"


  log-the-inputs:
    needs:  set_target_env
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo ${{ needs.set_target_env.outputs.env_app }}

        #   echo "Log level: $LEVEL"
        #   echo "Tags: $TAGS"
        #   echo "Environment: $ENVIRONMENT"
        #   printenv
        # env:
        #   LEVEL: ${{ inputs.logLevel }}
        #   TAGS: ${{ inputs.tags }}
        #   ENVIRONMENT: ${{ inputs.environment }}
